AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Creates required AWS resources for Heatmeter data capture through AWS IOT Core.
Parameters:
  HeatermeterThingID:
    Type: String
    Description: Heatermeter Thing ID (MAC Address)
    Default:  79A6083123EE
  CertificateARN:
    Type: String
    Description: The Amazon Resource Name (ARN) of the existing AWS IoT certificate.
  S3BucketARNRawEvents:
    Type: String
    Description: The Amazon Resource Name (ARN) for the S3 Bucket to store your raw events.

Resources:
  IoTThing:
    Type: 'AWS::IoT::Thing'
    Properties:
      ThingName: !Sub ${HeatermeterThingID}-${AWS::StackName}

  IoTPolicy:
    Type: 'AWS::IoT::Policy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: 
            - 'iot:Publish'
            - 'iot:Receive'
            Effect: Allow
            Resource: !Sub 'arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/heatermeter*'
          - Action: 'iot:Subscribe'
            Effect: Allow
            Resource: !Sub 'arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/heatermeter*'
          - Action: 'iot:Connect'
            Effect: Allow
            Resource: !Sub 'arn:aws:iot:${AWS::Region}:${AWS::AccountId}:client/heatermeter'
 
  IoTRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: iot.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSIoTRuleActions
      RoleName: !Sub HeatermeterActionRole-${AWS::StackName}

  KDFHRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref 'AWS::AccountId'      
  KDFHPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: firehose_Delivery_policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: "*"
            Resource: "*"
      Roles:
        - !Ref KDFHRole                

  IoTPolicyPrincipalAttachment:
    Type: 'AWS::IoT::PolicyPrincipalAttachment'
    Properties:
      PolicyName: !Ref IoTPolicy
      Principal: !Ref CertificateARN
 
  IoTThingPrincipalAttachment:
    Type: 'AWS::IoT::ThingPrincipalAttachment'
    Properties:
      Principal: !Ref CertificateARN
      ThingName: !Ref IoTThing

  TopicRuleTemps:
    Type: 'AWS::IoT::TopicRule'
    Properties:
      RuleName: !Sub '${HeatermeterThingID}_temps'
      TopicRulePayload:
        Actions:
          - Republish:
              RoleArn: !GetAtt IoTRole.Arn
              Topic: !Sub 'heatermeter/${HeatermeterThingID}/temps'
        AwsIotSqlVersion: 2016-03-23
        RuleDisabled: false
        Sql: !Sub SELECT time, temps FROM 'heatermeter/${HeatermeterThingID}'

  TopicRuleTempProbe1:
    Type: 'AWS::IoT::TopicRule'
    Properties:
      RuleName: !Sub '${HeatermeterThingID}_temp_probe_1'
      TopicRulePayload:
        Actions:
          - Republish:
              RoleArn: !GetAtt IoTRole.Arn
              Topic: !Sub 'heatermeter/${HeatermeterThingID}/temps/probe1'
        AwsIotSqlVersion: 2016-03-23
        RuleDisabled: false
        Sql: !Sub SELECT (SELECT c FROM temps WHERE n = 'Probe 1') as probe_1 FROM 'heatermeter/${HeatermeterThingID}'
        
#  Working https://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html
# SELECT (SELECT c FROM temps WHERE n = 'Probe 1') as probe_1 FROM 'heatermeter/${HeatermeterThingID}'
# SELECT get((SELECT c FROM temps WHERE n = 'Probe 1'),c).c as probe_1 FROM 'heatermeter/${HeatermeterThingID}'
# SELECT get((SELECT v FROM e WHERE n = 'temperature'),1).v as temperature FROM 'topic'


  TopicRuleSetTemp:
    Type: 'AWS::IoT::TopicRule'
    Properties:
      RuleName: !Sub '${HeatermeterThingID}_settemp'
      TopicRulePayload:
        Actions:
          - Republish:
              RoleArn: !GetAtt IoTRole.Arn
              Topic: !Sub 'heatermeter/${HeatermeterThingID}/settemp'
        AwsIotSqlVersion: 2016-03-23
        RuleDisabled: false
        Sql: !Sub SELECT time, set FROM 'heatermeter/${HeatermeterThingID}'        

  TopicRuleAll:
    Type: 'AWS::IoT::TopicRule'
    Properties:
      RuleName: !Sub '${HeatermeterThingID}_all'
      TopicRulePayload:
        Actions:
          - Firehose:
              DeliveryStreamName: !Ref DeliverystreamSentimentFirehose
              RoleArn: !GetAtt IoTRole.Arn
        AwsIotSqlVersion: 2016-03-23
        RuleDisabled: false
        Sql: !Sub SELECT * FROM 'heatermeter/${HeatermeterThingID}'        

  DeliverystreamSentimentFirehose:
      Type: 'AWS::KinesisFirehose::DeliveryStream'
      Properties:
        DeliveryStreamName: !Sub 'heatermeter-all-events-raw-${AWS::StackName}'
        ExtendedS3DestinationConfiguration:
          BucketARN: !Ref S3BucketARNRawEvents
          BufferingHints:
            IntervalInSeconds: '60'
            SizeInMBs: '1'
          CompressionFormat: UNCOMPRESSED
          Prefix: !Sub ${HeatermeterThingID}/raw/
          RoleARN: !GetAtt KDFHRole.Arn